#! /usr/bin/env ruby

require "rubygems"
require "daemons"
require "eventmachine"
require "em-http-server"
require "websocket-eventmachine-client"

tmp_path = File.expand_path("../../tmp", File.dirname(__FILE__))
system_notification_log_file_path = "#{tmp_path}/system_notifications.log"

DEBUG = true
$ws_connected = false

class HTTPHandler < EM::HttpServer::Server
  def process_http_request
    response = EM::DelegatedHttpResponse.new(self)
    response.status = 200
    response.content_type 'text/plain'
    response.content = $ws_connected.to_s
    response.send_response
  end

  def http_request_errback e
    puts e.inspect
  end
end


Daemons.run_proc("system_notification_logger", :log_output => true, :dir_mode => :normal, :dir => tmp_path) do
  log_file = File.open(system_notification_log_file_path, "a+")
  log_file.sync = true

  trap("INT") {  @interrupted = true }
  trap("TERM") { @interrupted = true }

  @interrupted = false
  @ws = nil

  EM.run do
    EM::start_server("127.0.0.1", 9651, HTTPHandler)

    EM.add_periodic_timer(0.1) do
      if @interrupted
        @ws.unbind if @ws
        EM.add_timer(0){ EM.stop_event_loop }
      else
        if @ws.nil?
          @ws = WebSocket::EventMachine::Client.connect(:uri => 'ws://127.0.0.1:9650/notifications')
          @ws.onopen do
            $ws_connected = true
            puts "established web socket connection" if DEBUG
          end
          @ws.onclose do
            puts "server closed web socket connection" if DEBUG && !@interrupted && $ws_connected
            $ws_connected = false
            @ws = nil
          end
          @ws.onmessage do |text|
            if text != "HEARTBEAT"
              puts "writing message to #{system_notification_log_file_path}: #{text}"
              log_file << (text + "\n")
            end
          end
        end
      end
    end

  end

  puts "Terminated system notification logger: #{Process.pid}"
end
