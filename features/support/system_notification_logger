#! /usr/bin/env ruby

require "rubygems"
require "daemons"
require "eventmachine"
require "websocket-eventmachine-client"
require File.expand_path("../../lib/beetle", File.dirname(__FILE__))

tmp_path = File.expand_path("../../tmp", File.dirname(__FILE__))
system_notification_log_file_path = "#{tmp_path}/system_notifications.log"

DEBUG = false

Daemons.run_proc("system_notification_logger", :log_output => true, :dir_mode => :normal, :dir => tmp_path) do
  Beetle.config.servers = "#{ENV['RABBITMQ_HOST'] || '127.0.0.1'}:#{ENV['RABBITMQ_PORT'] || 5672}" # rabbitmq

  # set Beetle log level to info, less noisy than debug
  Beetle.config.logger.level = Logger::DEBUG

  log_file = File.open(system_notification_log_file_path, "a+")
  log_file.sync = true

  @interrupted = false
  def shutdown(ws)
    @interrupted = true
    ws.unbind
  end

  while !@interrupted
    EventMachine.run do
      ws = WebSocket::EventMachine::Client.connect(:uri => 'ws://127.0.0.1:9650/notifications')
      ws.onopen do
        puts "established connection" if DEBUG
      end
      ws.onclose do
        puts "server closed connection" if DEBUG && !@interrupted
        EM.add_timer(0){ EM.stop_event_loop }
      end
      ws.onmessage do |text|
        puts "writing message to #{system_notification_log_file_path}: #{text}"
        log_file << (text + "\n")
      end
      puts "Started system notification logger"
      trap("INT") {  shutdown(ws) }
      trap("TERM") { shutdown(ws) }
    end
  end
end
